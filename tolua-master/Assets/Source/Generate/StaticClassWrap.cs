//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class StaticClassWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(StaticClass), typeof(System.Object));
		L.RegFunction("Function", Function);
		L.RegFunction("New", _CreateStaticClass);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("str", get_str, set_str);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateStaticClass(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				StaticClass obj = new StaticClass();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: StaticClass.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Function(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			StaticClass.Function();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_str(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, StaticClass.str);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_str(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			StaticClass.str = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

